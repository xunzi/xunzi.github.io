<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bloggggg - helferlein</title><link href="https://xunzi.github.io/" rel="alternate"></link><link href="https://xunzi.github.io/feeds/atom/helferlein.xml" rel="self"></link><id>https://xunzi.github.io/</id><updated>2010-09-14T14:09:00+02:00</updated><subtitle>We are fools whether we dance or not so we might as well dance</subtitle><entry><title>von Linux zu MacOS</title><link href="https://xunzi.github.io/von-linux-zu-macos.html" rel="alternate"></link><published>2010-09-14T14:09:00+02:00</published><updated>2010-09-14T14:09:00+02:00</updated><author><name>Christian Drexler</name></author><id>tag:xunzi.github.io,2010-09-14:/von-linux-zu-macos.html</id><summary type="html">&lt;p&gt;Da seit neuestem ein MacMini unseren Sekretär ziert, musste ich für
einige liebgewonnene Applikationen Ersatz suchen. Besonders schwierig
war diese Suche im Bereich Bildverwaltung und Musikverwaltung.&lt;/p&gt;
&lt;p&gt;Als Bildverwaltung kam bisher immer &lt;a href="http://www.digikam.org/drupal/"&gt;Digikam&lt;/a&gt; zum Einsatz. Das läßt
sich zwar auch unter MacOS &lt;a href="http://opensourcecat.blogspot.com/2009/01/en-digikam-little-step-more-to-world.html"&gt;kompilieren&lt;/a&gt;, aber das erfordert häßliche
Krücken, um die KDE-Umgebung …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Da seit neuestem ein MacMini unseren Sekretär ziert, musste ich für
einige liebgewonnene Applikationen Ersatz suchen. Besonders schwierig
war diese Suche im Bereich Bildverwaltung und Musikverwaltung.&lt;/p&gt;
&lt;p&gt;Als Bildverwaltung kam bisher immer &lt;a href="http://www.digikam.org/drupal/"&gt;Digikam&lt;/a&gt; zum Einsatz. Das läßt
sich zwar auch unter MacOS &lt;a href="http://opensourcecat.blogspot.com/2009/01/en-digikam-little-step-more-to-world.html"&gt;kompilieren&lt;/a&gt;, aber das erfordert häßliche
Krücken, um die KDE-Umgebung zum Laufen zu bringen. iPhoto war auch
nicht so mein Fall (das war vor allem erstaunlich zäh, noch bevor ich
alle meine Bilder importiert hatte), schließlich bin ich bei Googles
Picasa gelandet, weil ich keine Lust hatte, ein- oder zweihundert Euro
für die einschlägigen Produkte von Adobe oder Apple auszugeben, Picasa
angenehm flott reagiert und die grundlegenden Bearbeitungsfunktionen
bereithält, die ich so brauche. Ein zusätzliches Plus ist die
hervorragende Integration in die Picasa Webalben.&lt;/p&gt;
&lt;p&gt;Die Musikverwaltung war ein noch größeres Problem, da iTunes komplett
indiskutabel ist (warum muß ich meine Kreditkartennummer angeben, wenn
ich Coverbilder zu meinen Musikstücken sehen will) und mein Mp3-Player
nur &lt;a href="http://en.wikipedia.org/wiki/Media_Transfer_Protocol"&gt;Mtp&lt;/a&gt; und &lt;a href="http://en.wikipedia.org/wiki/USB_mass_storage_device_class"&gt;Msc&lt;/a&gt; spricht und somit in iTunes gar nicht
unterstützt wird. Nach Experimenten mit Xnjb, das &lt;a href="http://www.wentnet.com/projects/xnjb/"&gt;Mtp&lt;/a&gt; unter MacOS
implementiert, bin ich bei &lt;a href="http://getsongbird.com/"&gt;Songbird&lt;/a&gt; gelandet, der in der letzten
Version sehr gute Unterstützung für Msc-Geräte bietet.&lt;strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Update]&lt;/strong&gt;Noch besser, weil schlanker und schneller ist
&lt;a href="http://www.clementine-player.org/"&gt;Clementine&lt;/a&gt;, sehr empfehlenswert für alle, die Amarok 1.x
nachtrauern!&lt;/p&gt;
&lt;p&gt;Angeschaut habe ich mir auch &lt;a href="http://jajuk.info/index.php/Main_Page"&gt;Jajuk&lt;/a&gt;, das aber nicht so schön in den
MacOS-Desktop integriert ist (das hat mich auf der Suche nach einem
Editor auch wieder von &lt;a href="http://www.jedit.org"&gt;jEdit&lt;/a&gt; abgebracht, aber an der Editoren-Front
gibt es ja zum Glück &lt;a href="http://aquamacs.org/"&gt;Aquamacs&lt;/a&gt;!)&lt;/p&gt;</content><category term="misc"></category><category term="helferlein"></category><category term="macos"></category><category term="linux"></category></entry><entry><title>Django-Toolbar</title><link href="https://xunzi.github.io/django-toolbar.html" rel="alternate"></link><published>2010-06-24T18:24:00+02:00</published><updated>2010-06-24T18:24:00+02:00</updated><author><name>Christian Drexler</name></author><id>tag:xunzi.github.io,2010-06-24:/django-toolbar.html</id><summary type="html">&lt;p&gt;Bei meinen Experimenten mit &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; ist mir letztlich die
&lt;a href="http://rob.cogit8.org/blog/2008/Sep/19/introducing-django-debug-toolbar/"&gt;Django-Toolbar&lt;/a&gt; unter die Finger gekommen. Hierbei handelt es sich um
eine Django-Middleware, die zusätzlich zu der normalen Ausgabe ein
Overlay erzeugt, dem man so interessante Details wie die Http-Header des
aktuellen Requests oder die SQL-Queries, die für den aktuellen Request
ausgeführt …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bei meinen Experimenten mit &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; ist mir letztlich die
&lt;a href="http://rob.cogit8.org/blog/2008/Sep/19/introducing-django-debug-toolbar/"&gt;Django-Toolbar&lt;/a&gt; unter die Finger gekommen. Hierbei handelt es sich um
eine Django-Middleware, die zusätzlich zu der normalen Ausgabe ein
Overlay erzeugt, dem man so interessante Details wie die Http-Header des
aktuellen Requests oder die SQL-Queries, die für den aktuellen Request
ausgeführt wurden. Das ist schon cool, fast noch cooler ist, daß
Django mittlerweile sehr gut und vollständig in &lt;a href="http://packages.ubuntu.com/lucid/python-django"&gt;Ubuntu&lt;/a&gt; verfügbar
ist (und auch die Toolbar ein aptitude install
python-django-debug-toolbar entfernt ist). &lt;a href="/static/screenshot-django-toolbar.png"&gt;So&lt;/a&gt; sieht das Ganze in
Aktion aus.&lt;/p&gt;</content><category term="misc"></category><category term="django"></category><category term="helferlein"></category><category term="web"></category></entry><entry><title>Bloggen aus Firefox</title><link href="https://xunzi.github.io/bloggen-aus-firefox.html" rel="alternate"></link><published>2009-03-23T09:09:00+01:00</published><updated>2009-03-23T09:09:00+01:00</updated><author><name>Christian Drexler</name></author><id>tag:xunzi.github.io,2009-03-23:/bloggen-aus-firefox.html</id><summary type="html">&lt;p&gt;Eine hübsche und nützliche Erweiterung für Firefox ist &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/1730"&gt;ScribeFire&lt;/a&gt;,
mit dessen Hilfe via &lt;a href="http://en.wikipedia.org/wiki/MetaWeblog"&gt;Metaweblog-API&lt;/a&gt; Blogbeiträge direkt aus Firefox
heraus erstellt werden können.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Update]&lt;/strong&gt; FireScribe fügt neuen Einträgen ein unsichtbares
pixelgroßes Jpg-Bild hinzu, das auf Zemanta verweist (sichtbar in der
Quellcode-Ansicht). Die Konfigurationsoption "Automatically insert
invisible tracking pixel for statistics gathering …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Eine hübsche und nützliche Erweiterung für Firefox ist &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/1730"&gt;ScribeFire&lt;/a&gt;,
mit dessen Hilfe via &lt;a href="http://en.wikipedia.org/wiki/MetaWeblog"&gt;Metaweblog-API&lt;/a&gt; Blogbeiträge direkt aus Firefox
heraus erstellt werden können.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Update]&lt;/strong&gt; FireScribe fügt neuen Einträgen ein unsichtbares
pixelgroßes Jpg-Bild hinzu, das auf Zemanta verweist (sichtbar in der
Quellcode-Ansicht). Die Konfigurationsoption "Automatically insert
invisible tracking pixel for statistics gathering" unter "Publishing"
sollte dieses Verhalten deaktivieren.&lt;/p&gt;</content><category term="misc"></category><category term="firefox"></category><category term="helferlein"></category></entry><entry><title>Screencast einer Windows-Session in Virtualbox</title><link href="https://xunzi.github.io/screencast-einer-windows-session-in-virtualbox.html" rel="alternate"></link><published>2009-02-20T22:26:00+01:00</published><updated>2009-02-20T22:26:00+01:00</updated><author><name>Christian Drexler</name></author><id>tag:xunzi.github.io,2009-02-20:/screencast-einer-windows-session-in-virtualbox.html</id><summary type="html">&lt;p&gt;Screencasts von Windows-Sessions, die in einer Virtualbox-VM laufen,
sind dank vrdp und pyvnc2swf sehr einfach zu erstellen.&lt;/p&gt;
&lt;p&gt;Ein Screencast ist so etwas wie ein animierter Screenshot und in manchen
Fällen einleuchtender als eine lange Kette von Schnappschüssen des
Bildschirms.&lt;/p&gt;
&lt;p&gt;Das Tool &lt;a href="http://www.unixuser.org/~euske/vnc2swf/"&gt;pyvnc2swf&lt;/a&gt; erstellt aus einer Vnc-Session ein Flashfilmchen.
Um nun …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Screencasts von Windows-Sessions, die in einer Virtualbox-VM laufen,
sind dank vrdp und pyvnc2swf sehr einfach zu erstellen.&lt;/p&gt;
&lt;p&gt;Ein Screencast ist so etwas wie ein animierter Screenshot und in manchen
Fällen einleuchtender als eine lange Kette von Schnappschüssen des
Bildschirms.&lt;/p&gt;
&lt;p&gt;Das Tool &lt;a href="http://www.unixuser.org/~euske/vnc2swf/"&gt;pyvnc2swf&lt;/a&gt; erstellt aus einer Vnc-Session ein Flashfilmchen.
Um nun ein Screencast von einem per &lt;a href="http://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; in ein Fenster
verbannten Windows zu erstellen, reicht es, in den Einstellungen der
virtuellen Maschine unter "Remote Display" das Häkchen bei "Enable VRDP
Server" zu setzen und die virtuelle Maschine zu starten. Jetzt braucht
es noch einen Vnc-Server (per &lt;code&gt;vncserver -geometry 800x600&lt;/code&gt; einfach zu
starten) und sich per &lt;code&gt;vncviewer :1&lt;/code&gt; mit dem Vncserver zu verbinden.
Unter Ubuntu startet die Vnc-Session ohne Fenstermanager aber mit einem
Terminal. (Um einen sehr schlanken Desktop in der Vnc-Session
hinzubekommen, empfiehlt sich das Paket &lt;a href="http://packages.ubuntu.com/hardy/twm"&gt;twm&lt;/a&gt;. Der Terminal ist aber
auch völlig ausreichend, um sich per &lt;code&gt;rdesktop -k de localhost&lt;/code&gt; mit der
laufenden virtuellen Maschine zu verbinden.&lt;/p&gt;
&lt;p&gt;Parallel dazu muß dann das Programm pyvnc2swf gestartet werden, es
bekommt als Parameter die Display-Nummer der Vnc-Session, also etwa so:
&lt;code&gt;pyvnc2swf :1&lt;/code&gt;. Um die Aufnahme zu starten, muß man in der
übersichlichen Gui den Start-Knopf drücken und das Passwort der
Vnc-Session angeben. Danach kann man dann seine Vorführung auf dem
Windows-Desktop abspulen und hernach den Stop-Knopf drücken. Das
Ergebnis wird in zwei Dateien abgespeicher, einer Flash-Datei und einer
html-Datei, die den Flash-Film mit einer Pause-Taste ausstattet.&lt;/p&gt;
&lt;p&gt;Das Ergebnis sieht dann &lt;a href="/static/favourites-screencast.html"&gt;so aus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Das ganze setzt neben der &lt;a href="http://www.virtualbox.org/wiki/VirtualBox_PUEL"&gt;"Personal Use and Evaluation License"-Version
von Virtualbox&lt;/a&gt; (nur die beherrscht VRDP) noch &lt;a href="http://packages.ubuntu.com/hardy/rdesktop"&gt;rdesktop&lt;/a&gt; und
&lt;a href="http://packages.ubuntu.com/hardy/graphics/pyvnc2swf"&gt;pyvnc2swf&lt;/a&gt; aus den Universe-Repositories voraus.&lt;/p&gt;</content><category term="misc"></category><category term="helferlein"></category><category term="virtualbox"></category></entry><entry><title>Konsolenhelfer (1): dstat</title><link href="https://xunzi.github.io/konsolenhelfer-1-dstat.html" rel="alternate"></link><published>2008-07-05T11:08:00+02:00</published><updated>2008-07-05T11:08:00+02:00</updated><author><name>Christian Drexler</name></author><id>tag:xunzi.github.io,2008-07-05:/konsolenhelfer-1-dstat.html</id><summary type="html">&lt;p&gt;Auf der Suche nach Performance-Engpässen ist es öfter notwendig, die
Ausgaben der Kommandos &lt;code&gt;vmstat&lt;/code&gt;, &lt;code&gt;iostat&lt;/code&gt; und &lt;code&gt;nfsstat&lt;/code&gt; miteinander zu
vergleichen. Einfacher als drei Terminalfenster mit den jeweiligen
Kommandos ist das Tool &lt;code&gt;dstat&lt;/code&gt;, das zusätzlich noch eine
augenfreundlich kolorierte Ausgabe erzeugt. &lt;code&gt;Dstat&lt;/code&gt; von &lt;a href="http://dag.wieers.com/home-made/dstat/"&gt;Dag Wieers&lt;/a&gt;. &lt;code&gt;dstat&lt;/code&gt; misst eine konfigurierbare Auswahl von …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Auf der Suche nach Performance-Engpässen ist es öfter notwendig, die
Ausgaben der Kommandos &lt;code&gt;vmstat&lt;/code&gt;, &lt;code&gt;iostat&lt;/code&gt; und &lt;code&gt;nfsstat&lt;/code&gt; miteinander zu
vergleichen. Einfacher als drei Terminalfenster mit den jeweiligen
Kommandos ist das Tool &lt;code&gt;dstat&lt;/code&gt;, das zusätzlich noch eine
augenfreundlich kolorierte Ausgabe erzeugt. &lt;code&gt;Dstat&lt;/code&gt; von &lt;a href="http://dag.wieers.com/home-made/dstat/"&gt;Dag Wieers&lt;/a&gt;. &lt;code&gt;dstat&lt;/code&gt; misst eine konfigurierbare Auswahl von
Betriebssystem-Parametern und zeigt sie kontinuierlich an. Wird &lt;code&gt;dstat&lt;/code&gt;
ohne weitere Parameter aufgerufen, zeigt es Statistiken zu Cpu, Blockdevice, Netzwerk, Paging und System (Context switches und Interrupts) an:
&lt;img alt="dstat screenshot" src="/static/dstat.png" title="dtstat screenshot"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Dstat&lt;/code&gt; ist durch Plugins erweiterbar, eine Liste der verfügbaren
Plugins gibt das Kommando &lt;code&gt;dstat -M list&lt;/code&gt;.&lt;br&gt;
So ist es zum Beispiel möglich, zusätzlich zu den erwähnten
Default-Statistiken den "most expensive"-Pozeß anzeigen zu lassen,
gemessen in Hundertstel-Sekunden, die der Prozess im user-Mode und im
Kernel-Mode verbracht hat (siehe &lt;code&gt;man 5 proc&lt;/code&gt;).
Außerdem ist dstat in Python geschrieben, so dass es sehr einfach ist,
neue Plugins zu schreiben.&lt;/p&gt;</content><category term="misc"></category><category term="helferlein"></category><category term="dstat"></category></entry></feed>